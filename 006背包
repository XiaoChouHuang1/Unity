1.	背包  
2.	uiroot   
3.	获取所有的信息,(需要脚本)  
4.	获取所有的格子.为一个集合 ,(需要脚本)  
5.	每一个集合需要获取自己的item 所以每一个item 也需要一个脚本(多个时需要脚本)  
6.	hero Info (一个物品的信息)(需要脚本)  
7.	infolixt  物品集合的信息(放到空物体获取数据)单例  
8.	一个时instiate(prefab)  
9.	另外一个nguitools  
10.	id关联  
11.	对象为空  
12.	trygetvalue   
13.	注意ScoolView与背景图片在同一级下  同在container下  
14.	先container 再pannel+scoolView  
15.	背包第二遍  
16.	ui创建  
17.	1,创建container 容器,创建背景(为了美观)  
18.	2,创建sprite 添加所有的格子到背景上  (制作为预制体)  
19.	3,创建格子上的显示信息item (制作为预制体,用container)  
20.	创建类  
21.	1,创建uiroot下的类,声明一个grid数组,将grid赋值给数组list   
22.	2,创建grid类实例化item  
23.	3,创建item用于更换图片标签信息  
24.	4,创建单个物品的类,不继承与monobehavoir ,有构造函数  
25.	5,创建一个单例,字典集合,键值为id ,值为物品类  
26.	逻辑展示  
27.	1,使用root类下方法,给格子赋值一个id   调用格子的设置id 的方法,格子获取id,id数据源有listInformation提供  
28.	2,grid获取了id ,grid需要展示物品的信息,所以grid实例化自己prefab ,返回gameobject g  
29.	g为item ,调用自己的更换图片id 的方法  
30.	3,item,根据自己的方法,获取传入的id ,根据id在listInformation 单例类中获取返回值为信息类对象的方法,最终item类中,获取根据id到一个信息,  
31.	将对象的图片名赋值给spritename   
32.	id赋值给标签  
33.	//整体理解  
34.	信息类id->格子id->item id->根据id返回一个信息类的对象,获取对象的信息  
35.	信息集合类,创建所有信息集合,以及id集合,以及一个根据id返回返回信息类对象的方法   ,使用out引用,再返回  
36.	root获取所有的格子,格子实例化item.item根据传入的id获取一个信息类对象,最终展示图片  
37.	1,需要注意根据数据集合类的元素个数,控制格子需要显示的个数  
38.	2,格子通过实例化穿件item  
39.	实例化的两种方法  nguitools .addchild()  
40.	                g.gamaobject.localposition=vec3.zero  
41.	                g获取其组件.调用方法  
42.	instatute();需要实例化位置  
43.	3,信息类获取id ,  根据方法返回的类对象,改变显示的图片的名字  
44.	ui注意:  
45.	所有物品都在container下创建  ,创建需要实例化的ui时,另外创建container  
46.	scroolviev  脚本下的子物体,都是可以滑动的,所以背景,一定与scroolview一定与背景在同一级下  
47.	接上:  
48.	背包中可以使用枚举定义新的类型,枚举的名字就是一种类型,  
49.	在写多个种类的物品时,可以使用枚举,在一个信息类中,专门定义枚举,可以在每个类中进行使用,特别的属性定义为枚举,一般的属性定义为公有属性  
50.	定义一个公有的textAssert资源,把需要解读的text文本啦进去,就可以获取文本的内容  
51.	每一行的内容可以用”\n”进行分割,分割之后用一个字符串数组存取  
52.	每一个字符串数组中的每个元素,可以用”,”分割,分割后在存储在一个字符串数组  
53.	然后new一个数据类的对象,为对象的各个属性赋值.  
54.	然后在遇到同一属性,多种类型时,使用switch判断,判断之后再添加属性  
55.	label中的字体一般不支持中文  
56.	为item添加boxcollider 以及button scripts  
57.	这样就可以点击输出id  
58.	另外添加一个容器,添加sprite,以及label标签,,通过设置图片的true或者false,控制信息的显示  

